# PHP CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1

defaults: &defaults
  docker:
    - image: cimg/php:<< parameters.php-version >>-node
  parameters:
    php-version:
      type: string
    dependencies:
      type: string

# YAML does not support merging of lists. That means we can't have a default
# 'steps' configuration, though we can have defaults for individual step
# properties.

# We use the composer.json as a way to determine if we can cache our build.
restore_cache: &restore_cache
  keys:
  - v1-dependencies-{{ checksum "composer.json" }}-<< parameters.php-version >>

# If composer.json hasn't changed, restore the Composer cache directory. We
# don't restore the lock file so we ensure we get updated dependencies.
save_cache: &save_cache
  paths:
    - ./vendor
  key: v1-dependencies-{{ checksum "composer.json" }}-<< parameters.php-version >>

php_build: &php_build
  <<: *defaults

  steps:
    - checkout

    - restore_cache: *restore_cache

    - run:
        name: Update composer
        command: |
          COMPOSER_OPTIONS="--no-suggest --no-interaction"
          COMPOSER_PROCESS_TIMEOUT=0
          composer update $COMPOSER_OPTIONS
  
    - run:
        name: Install dependencies
        command: |
          DEPENDENCIES=<< parameters.dependencies >>;
          PHP_VERSION=<< parameters.php-version >>;
          composer require guzzlehttp/guzzle:^6.3.0 --update-with-dependencies $DEPENDENCIES;
          if [[ $PHP_VERSION = "7.3" ]] && [[ $DEPENDENCIES = "" ]]; then composer require symfony/polyfill-mbstring:1.19.0 --update-with-dependencies; fi

    - save_cache: *save_cache
    - run: composer show

    - run:
        name: Check style for only changed files
        command: |
          IFS=$'\n'; CHANGED_FILES=($(git diff --name-only --diff-filter=ACMRTUXB --"${COMMIT_RANGE}")); unset IFS
          EXTRA_ARGS=('--path-mode=intersection' '--' "${CHANGED_FILES[@]}")
          composer check-style -- --using-cache=no "${EXTRA_ARGS[@]}"

    - run: 
        name: Composer Analyze
        command: composer analyze

    - run: 
        name: Composer Test
        command: |
          PHP_VERSION=<< parameters.php-version >>;
          if [[ $PHP_VERSION = "7.3" ]]; then composer test; fi
          if [[ $PHP_VERSION = "7.4" ]]; then composer test -- --coverage-clover=clover.xml; fi

    - run:
        name: Composer Metrics
        command: |
          composer metrics
          PHP_VERSION=<< parameters.php-version >>;
          if [[ $PHP_VERSION = "7.4" ]] && [[ $DEPENDENCIES = "" ]]; then bash <(curl -s https://codecov.io/bash) -f ./clover.xml; fi

# Declare all of the jobs we should run.
jobs:
  php-build:
     <<: *php_build

workflows:
  version: 2

  # Declare a workflow that runs all of our jobs in parallel.
  test_and_lint:
    jobs:
      - php-build:
          name: PHP-<< matrix.php-version >>-DEPENDENCIES="<< matrix.dependencies >>"
          matrix:
            parameters:
              php-version: [ "7.3", "7.4" ]
              dependencies: [ "--prefer-lowest", " " ]
